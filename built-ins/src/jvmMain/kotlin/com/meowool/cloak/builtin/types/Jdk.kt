/*
 * Copyright (c) 2022. The Meowool Organization Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * In addition, if you modified the project, you must include the Meowool
 * organization URL in your code file: https://github.com/meowool
 *
 * 如果您修改了此项目，则必须确保源文件中包含 Meowool 组织 URL: https://github.com/meowool
 */
 
@file:JvmMultifileClass
@file:JvmName("BuiltInTypes")
@file:Suppress("ObjectPropertyName", "SpellCheckingInspection", "NewApi", "DEPRECATION")

/*
 * This file is automatically generated by [meowool-cloak](https://github.com/meowool-catnip/cloak/built-ins/generator).
 */
package com.meowool.cloak.builtin.types

import com.meowool.cloak.Type
import com.meowool.cloak.type
import com.meowool.sweekt.LazyInit
import java.io.File
import java.io.Serializable
import java.lang.Void
import java.util.ArrayList
import java.util.HashMap
import java.util.HashSet
import java.util.LinkedHashMap
import java.util.LinkedHashSet
import java.util.Observer
import java.util.RandomAccess
import java.util.Vector
import kotlin.Any
import kotlin.Array
import kotlin.Boolean
import kotlin.BooleanArray
import kotlin.Byte
import kotlin.ByteArray
import kotlin.Char
import kotlin.CharArray
import kotlin.CharSequence
import kotlin.Cloneable
import kotlin.Comparable
import kotlin.Double
import kotlin.DoubleArray
import kotlin.Enum
import kotlin.Float
import kotlin.FloatArray
import kotlin.Int
import kotlin.IntArray
import kotlin.Long
import kotlin.LongArray
import kotlin.Number
import kotlin.Short
import kotlin.ShortArray
import kotlin.String
import kotlin.Throwable
import kotlin.collections.Collection
import kotlin.collections.Iterable
import kotlin.collections.Iterator
import kotlin.collections.List
import kotlin.collections.ListIterator
import kotlin.collections.Map
import kotlin.collections.Set

/**
 * Represents the type of [Any] class.
 */
@LazyInit val _Object: Type<Any> = Any::class.java.type

/**
 * Represents the primitive type of [Void] class.
 */
@LazyInit val _void: Type<Void> = Void::class.javaPrimitiveType!!.type

/**
 * Represents the type of [Void] class.
 */
@LazyInit val _Void: Type<Void> = Void::class.javaObjectType.type

/**
 * Represents the type of [Throwable] class.
 */
@LazyInit val _Throwable: Type<Throwable> = Throwable::class.java.type

/**
 * Represents the type of [Enum] class.
 */
@LazyInit val _Enum: Type<Enum<*>> = Enum::class.java.type

/**
 * Represents the type of [CharSequence] class.
 */
@LazyInit val _CharSequence: Type<CharSequence> = CharSequence::class.java.type

/**
 * Represents the type of [Number] class.
 */
@LazyInit val _Number: Type<Number> = Number::class.java.type

/**
 * Represents the primitive type of [Byte] class.
 */
@LazyInit val _byte: Type<Byte> = Byte::class.javaPrimitiveType!!.type

/**
 * Represents the type of [Byte] class.
 */
@LazyInit val _Byte: Type<Byte> = Byte::class.javaObjectType.type

/**
 * Represents the primitive type of [Short] class.
 */
@LazyInit val _short: Type<Short> = Short::class.javaPrimitiveType!!.type

/**
 * Represents the type of [Short] class.
 */
@LazyInit val _Short: Type<Short> = Short::class.javaObjectType.type

/**
 * Represents the primitive type of [Int] class.
 */
@LazyInit val _int: Type<Int> = Int::class.javaPrimitiveType!!.type

/**
 * Represents the type of [Int] class.
 */
@LazyInit val _Integer: Type<Int> = Int::class.javaObjectType.type

/**
 * Represents the primitive type of [Long] class.
 */
@LazyInit val _long: Type<Long> = Long::class.javaPrimitiveType!!.type

/**
 * Represents the type of [Long] class.
 */
@LazyInit val _Long: Type<Long> = Long::class.javaObjectType.type

/**
 * Represents the primitive type of [Float] class.
 */
@LazyInit val _float: Type<Float> = Float::class.javaPrimitiveType!!.type

/**
 * Represents the type of [Float] class.
 */
@LazyInit val _Float: Type<Float> = Float::class.javaObjectType.type

/**
 * Represents the primitive type of [Double] class.
 */
@LazyInit val _double: Type<Double> = Double::class.javaPrimitiveType!!.type

/**
 * Represents the type of [Double] class.
 */
@LazyInit val _Double: Type<Double> = Double::class.javaObjectType.type

/**
 * Represents the primitive type of [Boolean] class.
 */
@LazyInit val _boolean: Type<Boolean> = Boolean::class.javaPrimitiveType!!.type

/**
 * Represents the type of [Boolean] class.
 */
@LazyInit val _Boolean: Type<Boolean> = Boolean::class.javaObjectType.type

/**
 * Represents the primitive type of [Char] class.
 */
@LazyInit val _char: Type<Char> = Char::class.javaPrimitiveType!!.type

/**
 * Represents the type of [Char] class.
 */
@LazyInit val _Character: Type<Char> = Char::class.javaObjectType.type

/**
 * Represents the type of [String] class.
 */
@LazyInit val _String: Type<String> = String::class.java.type

/**
 * Represents the type of [ByteArray] class.
 */
@LazyInit val _byteArray: Type<ByteArray> = ByteArray::class.java.type

/**
 * Represents the array type of [Byte] class.
 */
@LazyInit val _ByteArray: Type<Array<Byte>> = Array<Byte>::class.java.type

/**
 * Represents the type of [ShortArray] class.
 */
@LazyInit val _shortArray: Type<ShortArray> = ShortArray::class.java.type

/**
 * Represents the array type of [Short] class.
 */
@LazyInit val _ShortArray: Type<Array<Short>> = Array<Short>::class.java.type

/**
 * Represents the type of [IntArray] class.
 */
@LazyInit val _intArray: Type<IntArray> = IntArray::class.java.type

/**
 * Represents the array type of [Int] class.
 */
@LazyInit val _IntegerArray: Type<Array<Int>> = Array<Int>::class.java.type

/**
 * Represents the type of [LongArray] class.
 */
@LazyInit val _longArray: Type<LongArray> = LongArray::class.java.type

/**
 * Represents the array type of [Long] class.
 */
@LazyInit val _LongArray: Type<Array<Long>> = Array<Long>::class.java.type

/**
 * Represents the type of [FloatArray] class.
 */
@LazyInit val _floatArray: Type<FloatArray> = FloatArray::class.java.type

/**
 * Represents the array type of [Float] class.
 */
@LazyInit val _FloatArray: Type<Array<Float>> = Array<Float>::class.java.type

/**
 * Represents the type of [DoubleArray] class.
 */
@LazyInit val _doubleArray: Type<DoubleArray> = DoubleArray::class.java.type

/**
 * Represents the array type of [Double] class.
 */
@LazyInit val _DoubleArray: Type<Array<Double>> = Array<Double>::class.java.type

/**
 * Represents the type of [BooleanArray] class.
 */
@LazyInit val _booleanArray: Type<BooleanArray> = BooleanArray::class.java.type

/**
 * Represents the array type of [Boolean] class.
 */
@LazyInit val _BooleanArray: Type<Array<Boolean>> = Array<Boolean>::class.java.type

/**
 * Represents the type of [CharArray] class.
 */
@LazyInit val _charArray: Type<CharArray> = CharArray::class.java.type

/**
 * Represents the array type of [Char] class.
 */
@LazyInit val _CharacterArray: Type<Array<Char>> = Array<Char>::class.java.type

/**
 * Represents the array type of [String] class.
 */
@LazyInit val _StringArray: Type<Array<String>> = Array<String>::class.java.type

/**
 * Represents the type of [RandomAccess] class.
 */
@LazyInit val _RandomAccess: Type<RandomAccess> = RandomAccess::class.java.type

/**
 * Represents the type of [Comparable] class.
 */
@LazyInit val _Comparable: Type<Comparable<*>> = Comparable::class.java.type

/**
 * Represents the type of [Serializable] class.
 */
@LazyInit val _Serializable: Type<Serializable> = Serializable::class.java.type

/**
 * Represents the type of [Cloneable] class.
 */
@LazyInit val _Cloneable: Type<Cloneable> = Cloneable::class.java.type

/**
 * Represents the type of [Iterable] class.
 */
@LazyInit val _Iterable: Type<Iterable<*>> = Iterable::class.java.type

/**
 * Represents the type of [Iterator] class.
 */
@LazyInit val _Iterator: Type<Iterator<*>> = Iterator::class.java.type

/**
 * Represents the type of [ListIterator] class.
 */
@LazyInit val _ListIterator: Type<ListIterator<*>> = ListIterator::class.java.type

/**
 * Represents the type of [Collection] class.
 */
@LazyInit val _Collection: Type<Collection<*>> = Collection::class.java.type

/**
 * Represents the type of [List] class.
 */
@LazyInit val _List: Type<List<*>> = List::class.java.type

/**
 * Represents the type of [Set] class.
 */
@LazyInit val _Set: Type<Set<*>> = Set::class.java.type

/**
 * Represents the type of [Map] class.
 */
@LazyInit val _Map: Type<Map<*, *>> = Map::class.java.type

/**
 * Represents the type of [Map.Entry] class.
 */
@LazyInit val _Map_Entry: Type<Map.Entry<*, *>> = Map.Entry::class.java.type

/**
 * Represents the type of [HashSet] class.
 */
@LazyInit val _HashSet: Type<HashSet<*>> = HashSet::class.java.type

/**
 * Represents the type of [HashMap] class.
 */
@LazyInit val _HashMap: Type<HashMap<*, *>> = HashMap::class.java.type

/**
 * Represents the type of [ArrayList] class.
 */
@LazyInit val _ArrayList: Type<ArrayList<*>> = ArrayList::class.java.type

/**
 * Represents the type of [LinkedHashMap] class.
 */
@LazyInit val _LinkedHashMap: Type<LinkedHashMap<*, *>> = LinkedHashMap::class.java.type

/**
 * Represents the type of [LinkedHashSet] class.
 */
@LazyInit val _LinkedHashSet: Type<LinkedHashSet<*>> = LinkedHashSet::class.java.type

/**
 * Represents the type of [Observer] class.
 */
@LazyInit val _Observer: Type<Observer> = Observer::class.java.type

/**
 * Represents the type of [File] class.
 */
@LazyInit val _File: Type<File> = File::class.java.type

/**
 * Represents the type of [Vector] class.
 */
@LazyInit val _Vector: Type<Vector<*>> = Vector::class.java.type
